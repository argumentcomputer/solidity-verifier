import json
import sys
import os

def h(s):
    """
    Hexify a string
    """
    return "0x" + s

def step3DataContractGen(digest, nifs_secondary, r_U_secondary, l_u_secondary):
    # Unpack digest
    output = f"uint256 u  = {h(digest)};\n"

    # Unpack nifs_secondary
    nifs_secondary_repr = nifs_secondary["comm_T"]["comm"]["repr"]
    output += f"uint256[] memory nifs = {nifs_secondary_repr};\n"

    # Unpack r_U_secondary
    comm_W = r_U_secondary["comm_W"]["comm"]
    output += f"uint256 r_U_comm_W = {h(comm_W)};\n"
    comm_E = r_U_secondary["comm_E"]["comm"]
    output += f"uint256 r_U_comm_E = {h(comm_E)};\n"
    X0 = r_U_secondary["X"][0]
    X1 = r_U_secondary["X"][1]
    output += f"uint256[] memory r_U_X = [{h(X0)}, {h(X1)}];\n"
    r_U_u = r_U_secondary["u"]
    output += f"uint256 r_U_u = {h(r_U_u)};\n"

    # Unpack l_U_secondary
    comm_W = l_u_secondary["comm_W"]["comm"]
    output += f"uint256 l_u_comm_W = {h(comm_W)};\n"
    X0 = l_u_secondary["X"][0]
    X1 = l_u_secondary["X"][1]
    output += f"uint256[] memory l_u_X = [{h(X0)}, {h(X1)}];\n"

    output += "return (u, nifs, r_U_comm_W, r_U_comm_E, r_U_X, r_U_u, l_u_comm_W, l_u_X);\n"

    return output

def testResultContractGen(f_U_secondary):
    return f"{f_U_secondary}"

vk_file = sys.argv[1]
if not os.path.exists(vk_file):
    print("verifier-key (json) input file is missing")
    exit(1)

vk_f = open(os.path.basename(vk_file))
vk_data = json.load(vk_f)
digest = vk_data["vk_secondary"]["comm"]["S"]["digest"]

proof_file = sys.argv[2]
if not os.path.exists(proof_file):
    print("compressed snark (json) input file is missing")
    exit(1)

proof_f = open(os.path.basename(proof_file))
proof_data = json.load(proof_f)
nifs_secondary = proof_data["nifs_secondary"]
r_U_secondary = proof_data["r_U_secondary"]
l_u_secondary = proof_data["l_u_secondary"]
# f_U_secondary = proof_data["f_U_secondary"] # TODO: Not in the committed JSON

header = "// SPDX-License-Identifier: Apache-2.0\n"
header += f"// Do not change manually. This contract has been auto-generated by {sys.argv[0]}\n"
header += "pragma solidity ^0.8.0;\n"

data_function_def = "/* This function returns the following results in order:\n"
data_function_def += "* pp_digest, NIFS instance, r_U comm_W, r_U comm_E, r_U X, r_U u\n"
data_function_def += "* l_u comm_W, l_u X\n"
data_function_def += "*/\n"
data_function_def +=  "function returnData() public pure returns (uint256, uint256[] memory, uint256, uint256, uint256[] memory, uint256, uint256, uint256[] memory) {\n"
data_function_def += step3DataContractGen(digest, nifs_secondary, r_U_secondary, l_u_secondary) 
data_function_def += "}\n"

data_contract_body = "library Step3Data {\n"
data_contract_body += data_function_def
data_contract_body += "}\n"

test_function_def = "function returnResult() public pure returns (TODO) {\n"
test_function_def += testResultContractGen("TODO")
test_function_def += "}\n\n"

test_contract_body = "library TestResultLib {\n"
test_contract_body += test_function_def
test_contract_body += "}\n"

print(header)
print(data_contract_body)
print(test_contract_body)
